#!/bin/bash
export FZF_DEFAULT_OPTS='--height 60% --layout reverse --border'
export FZF_COMPLETION_TRIGGER=''
export FZF_COMPLETION_OPTS='--border --info=inline'

_fzf_compgen_path() {
    fd -u --follow -d1 . "$1"
}

_fzf_compgen_dir() {
    fd -u --follow -td -d1 . "$1"
}

_fzf_comprun() {
    local command=$1
    shift

    case "$command" in
	cd)		fzf -0 -1 "$@" --preview 'exa -TL 1 --icons --git-ignore {}' ;;
	vim|ln|mv|cp|rm)fzf -0 -1 "$@" --preview 'if [ -d {} ]; then exa -TL 1 --icons --git-ignore {}; else bat --color always --style numbers,grid {}; fi' ;;
	ssh)		fzf -0 -1 "$@" --preview 'dig {}' ;;
	export|unset)	fzf -0 -1 "$@" --preview "eval 'echo \$'{} " ;;
	apt)		fzf -0 -1 "$@" --preview 'apt-cache show {}' ;;
	*)		fzf -0 -1 "$@" ;;
    esac
}

[ -n "$BASH" ] && complete -F _fzf_complete_apt -o default -o bashdefault apt
_fzf_complete_apt() {
    local subcommand=$3
    case "$subcommand" in
	install)	_fzf_complete --exact -m -- "$@" < <( apt list 2> /dev/null | awk -F/ '{print $1}' | tail -n +2 ) ;;
	remove)		_fzf_complete --exact -m -- "$@" < <( apt list --installed 2> /dev/null | awk -F/ '{print $1}' | tail -n +2 ) ;;
	apt)	_fzf_complete -- "$@" < <(
		echo update
		echo upgrade
		echo install
		echo remove
		echo autoremove
		echo list
		echo full-upgrade
		echo dist-upgrade
		echo show
		echo search
		echo reinstall
		echo edit-sources
		echo satisfy
	    ) ;;
	*)		;;
    esac
}
